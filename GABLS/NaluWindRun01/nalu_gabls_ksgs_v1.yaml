# -*- mode: yaml -*-
#
# Set up file for the GABLS run
#
# Things to DOUBLECHECK:
#  - velocity perturbation
#  - viscosity value
#  - abltop_boundary_condition on upper
#  - remove abl and coriolis forcing (only have geostrophic and boussinesq)
#  - geostrophic forcing term
#  - Sampling planes and probe locations
#

nalu_abl_mesh:
  output_db: mesh_abl.exo
  spec_type: bounding_box
  fluid_part_name: fluid_part
  vertices:
  - [0.0, 0.0, 0.0]
  - [400.0, 400.0, 400.0]
  mesh_dimensions: [200, 200, 200]  # Use 2m cells until we're confident correct
  xmin_boundary_name: west
  xmax_boundary_name: east
  ymin_boundary_name: south
  ymax_boundary_name: north
  zmin_boundary_name: lower
  zmax_boundary_name: upper

# Mandatory section for Nalu preprocessing
nalu_preprocess:
  # Name of the input exodus database
  input_db: mesh_abl.exo
  # Name of the output exodus database
  output_db: mesh_abl.exo

  # Nalu preprocessor expects a list of tasks to be performed on the mesh and
  # field data structures
  tasks:
  - init_abl_fields

  init_abl_fields:

    # Fluid part is the interior mesh block(s) in the mesh. The default block is
    # `fluid` if the mesh was generated using `abl_mesh` utility.
    #
    # Use `ncdump -v eb_names <exodus_file>` to determine the mesh blocks
    #
    fluid_parts: [fluid_part]

    # -- Corresponds to  --
    # Theta =  265K          for 0 < z < 100m
    #          265 -> 268K   for 100 < z < 400m
    temperature:
      heights: [0,     100.0, 400.0]
      values:  [265.0, 265.0, 268.0]

      # Optional section to add random perturbations to temperature field
      # random noise with amplitude of 0.1K on the Theta field for 0<z<=50m
      perturbations:
        amplitude: 0.1 # in Kelvin
        cutoff_height: 50.0 # Perturbations below capping inversion
        skip_periodic_parts: [east, west, north, south]

    # -- Corresponds to  --
    # u, v = (8, 0) m/s for z > 0m
    velocity:
      heights:
      - 0
      - 400.0
      values:
      - - 8.0
        - 0.0
        - 0.0
      - - 8.0
        - 0.0
        - 0.0

      # -- Corresponds to  --
      # DOUBLECHECK: CONFIRM WITH OTHERS ON VELOCITY PERTURB
      perturbations:
        reference_height: 50.0   # Reference height for damping
        amplitude: [1.0, 1.0]    # Perturbation amplitudes in Ux and Uy
        periods: [4.0, 4.0]      # Num. periods in x and y directions


Simulations:
- name: sim1
  time_integrator: ti_1
  optimizer: opt1


# Specify the linear system solvers.
linear_solvers:

  # solver for scalar equations
- name: solve_scalar
  type: tpetra
  method: gmres
  preconditioner: sgs
  tolerance: 1e-6
  max_iterations: 75
  kspace: 75
  output_level: 0

  # solver for the pressure Poisson equation
- name: solve_cont
  type: tpetra
  method: gmres
  preconditioner: muelu
  tolerance: 1e-6
  max_iterations: 75
  kspace: 75
  output_level: 0
  recompute_preconditioner: no
  muelu_xml_file_name: ./milestone.xml


# Specify the different physics realms.  Here, we just have one for the fluid.
realms:

  # The fluid realm that uses the atmospheric LES mesh created above
- name: fluidRealm
  mesh: mesh_abl.exo
  use_edges: yes
  automatic_decomposition_type: rcb

  # This defines the equations to be solved: momentum, pressure, static enthalpy,
  # and subgrid-scale turbulent kinetic energy.  The equation system will be iterated
  # a maximum of 4 outer iterations.
  equation_systems:
    name: theEqSys
    max_iterations: 2

      # This defines which solver to use for each equation set.  See the
      # "linear_solvers" block.  All use the scalar solver, except pressure.
    solver_system_specification:
      velocity: solve_scalar
      pressure: solve_cont
      enthalpy: solve_scalar
      turbulent_ke: solve_scalar

      # This defines the equation systems, maximum number of inner iterations,
      # and scaled nonlinear residual tolerance.
    systems:

    - LowMachEOM:
        name: myLowMach
        max_iterations: 1
        convergence_tolerance: 1.0e-5

    - Enthalpy:
        name: myEnth
        max_iterations: 1
        convergence_tolerance: 1.0e-5

    # Use this for 1-eqn KSGS
    - TurbKineticEnergy:
        name: myTke
        max_iterations: 1
        convergence_tolerance: 1.0e-5

    # Specify the properties of the fluid, in this case air.
  material_properties:

    target_name: [fluid_part]

    constant_specification:
      universal_gas_constant: 8314.4621
      reference_pressure: 99895.69611647261  # = rho_ref*(R/mw)*Tref

    reference_quantities:
    - species_name: Air
      mw: 29.0
      mass_fraction: 1.0

    specifications:
      # -- Match reference conditions --
      # Density here was computed such that P_ref = rho_ref*(R/mw)*Tref
    - name: density
      type: constant
      value: 1.3223

      # DOUBLECHECK: viscosity
    - name: viscosity
      type: constant
      value: 1.872e-05

    - name: specific_heat
      type: constant
      value: 1007.0

  # Ignore initial_conditions settings, not used
  initial_conditions:
  - constant: ic_1
    target_name: [fluid_part]
        # These are dummy variables to be overwritten by nalu_wind_utils
    value:
      pressure: 0.0
      velocity: [7.250462296293199, 3.380946093925596, 0.0]


    # Boundary conditions are periodic on the north, south, east, and west
    # sides.  The lower boundary condition is a wall that uses an atmospheric
    # rough wall shear stress model.  The upper boundary is a stress free
    # rigid lid applied through symmetry, but the temperature is set to hold
    # a specified boundary normal gradient that matches the stable layer
    # immediately below.
  boundary_conditions:

  - periodic_boundary_condition: bc_north_south
    target_name: [north, south]
    periodic_user_data:
      search_tolerance: 0.0001

  - periodic_boundary_condition: bc_east_west
    target_name: [east, west]
    periodic_user_data:
      search_tolerance: 0.0001

  - abltop_boundary_condition: bc_upper
    target_name: upper
    abltop_user_data:
      # DOUBLECHECK: Using same 0.01 K/m for BC as the initial condition
      normal_temperature_gradient: 0.01

  - wall_boundary_condition: bc_lower
    target_name: lower
    ## ---
    # Using the new BC implementation
    wall_user_data:
      velocity: [0.0,0.0,0.0]
      abl_wall_function:
        surface_heating_table:
          # Surface temperature decreasingly continuously at rate 0.25K/hr
          #   Time     Tflux    T   weight (1=Tflux specified, 2=T specified)
          - [     0.0, 0.000, 265.0, 2.0]
          - [ 36000.0, 0.000, 262.5, 2.0]
          - [ 72000.0, 0.000, 260.0, 2.0]
        reference_temperature: 263.5
        roughness_height: 001
        kappa: 0.4
        beta_m: 4.8
        beta_h: 7.8
        gamma_m: 16.0
        gamma_h: 16.0
        gravity_vector_component: 3
        monin_obukhov_averaging_type: planar
        fluctuation_model: Moeng

  solution_options:
    name: myOptions
    turbulence_model: ksgs
    interp_rhou_together_for_mdot: yes

      # Pressure is not fixed anywhere on the boundaries, so set it at
      # the node closest to the specified location.
    fix_pressure_at_node:
      value: 0.0
      node_lookup_type: spatial_location
      location: [100.0, 2500.0, 1.0]
      search_target_part: [fluid_part]
      search_method: stk_kdtree

    options:

    # Model constants for the 1-eq k SGS model.
    # Unchanged from default
    - turbulence_model_constants:
        kappa: 0.40
        cEps: 0.93
        cmuEps: 0.0673
        cmuCs: 0.135   # for Smagorinsky, not used

    - laminar_prandtl:
        enthalpy: 0.7

        # Turbulent Prandtl number is 1/3 following Moeng (1984).
    - turbulent_prandtl:
        enthalpy: 0.3333

        # SGS viscosity is divided by Schmidt number in the k SGS diffusion
        # term.  In Moeng (1984), SGS viscosity is multiplied by 2, hence
        # we divide by 1/2
    - turbulent_schmidt:
        turbulent_ke: 0.5

        # The momentum source terms are a Boussinesq bouyancy term,
        # Coriolis from Earth's rotation, and a source term to drive
        # the planar-averaged wind at a certain height to a certain
        # speed.
    - source_terms:
        momentum:
        - buoyancy_boussinesq
        - body_force
        # #DOUBLECHECK: Commented out coriolis and abl forcing, not needed?
        # - EarthCoriolis
        # - abl_forcing
        turbulent_ke:
        - rodi

    - user_constants:
        reference_density: 1.3223
        reference_temperature: 263.5
        gravity: [0.0, 0.0, -9.81]
        thermal_expansion_coefficient: 3.33333333e-3
        east_vector: [1.0, 0.0, 0.0]
        north_vector: [0.0, 1.0, 0.0]
        latitude: 73.0                               # Corresponds to GABLS location
        earth_angular_velocity: 7.27220521664304e-05 # Corresponds to 86,400s/day

    - limiter:
        pressure: no
        velocity: no
        enthalpy: yes

    - peclet_function_form:
        velocity: tanh
        enthalpy: tanh
        turbulent_ke: tanh

    - peclet_function_tanh_transition:
        velocity: 50000.0
        enthalpy: 2.0
        turbulent_ke: 2.0

    - peclet_function_tanh_width:
        velocity: 200.0
        enthalpy: 1.0
        turbulent_ke: 1.0

    - source_term_parameters:
        ## -- Calculating geostrophic forcing --
        ## DOUBLECHECK calculation
        # rot_time_period   = 86400
        # coriolis_factor f = 2.0*2.0*pi/rot_time_period*sin(73.0/180*pi);
        #                 f = 0.0001390888887002987
        # rho               = 1.3223
        # m_target_vel      = [8, 0, 0]
        # m_g_forcing = [-f*rho*m_target_vel[1], f*rho*m_target_vel[0], 0.0 ]
        momentum: [-0.0, 0.0014713379002272398, 0.0]

        # This means that the initial temperature is read in
        # from the Exodus mesh/field file.
    - input_variables_from_file:
        velocity: velocity
        temperature: temperature


  output:
    output_data_base_name: output/abl_gabls.exo
    output_frequency: 1000
    output_node_set: no
    output_variables:
    - velocity
    - pressure
    - enthalpy
    - temperature
    - turbulent_ke

  # DOUBLECHECK: make sure these are consistent with AMR-Wind runs
  data_probes:  
    output_format: text 
    output_frequency: 2000   # output every 1000s until 23hr
    search_method: stk_kdtree
    search_tolerance: 1.0e-5 #1.0e-3
    search_expansion_factor: 2.0

    specifications:
    - name: probe_surface
      from_target_part: fluid_part  
      # Sampling planes
      plane_specifications:        
        - name: sliceData/XYplane_z050
          corner_coordinates:  [0, 0.0, 50.0]
          edge1_vector:    [400, 0, 0]
          edge2_vector:    [0, 400, 0]
          edge1_numPoints: 201
          edge2_numPoints: 201
        - name: sliceData/XYplane_z100
          corner_coordinates:  [0, 0.0, 100.0]
          edge1_vector:    [400, 0, 0]
          edge2_vector:    [0, 400, 0]
          edge1_numPoints: 201
          edge2_numPoints: 201
        - name: sliceData/XYplane_z200
          corner_coordinates:  [0, 0.0, 200.0]
          edge1_vector:    [400, 0, 0]
          edge2_vector:    [0, 400, 0]
          edge1_numPoints: 201
          edge2_numPoints: 201
        - name: sliceData/XZplane
          corner_coordinates:  [0, 200.0, 0.0]
          edge1_vector:    [400, 0, 0]
          edge2_vector:    [0, 0, 400]
          edge1_numPoints: 201
          edge2_numPoints: 201
        - name: sliceData/YZplane
          corner_coordinates:  [200.0, 0.0, 0.0]
          edge1_vector:    [0, 200, 0]
          edge2_vector:    [0, 0, 200]
          edge1_numPoints: 201
          edge2_numPoints: 201
      # # Uncomment below to sample for spectra
      # line_of_site_specifications:
      #   - name: probeData/probe_x066_y066
      #     number_of_points: 201
      #     tip_coordinates:  [66.66, 66.66,    0.0]
      #     tail_coordinates: [66.66, 66.66,  400.0]
      #   - name: probeData/probe_x066_y200
      #     number_of_points: 201
      #     tip_coordinates:  [66.66,  200.0,    0.0]
      #     tail_coordinates: [66.66,  200.0,  400.0]
      #   - name: probeData/probe_x066_y333
      #     number_of_points: 201
      #     tip_coordinates:  [66.66, 333.33,    0.0]
      #     tail_coordinates: [66.66, 333.33,  400.0]
      #   - name: probeData/probe_x200_y066
      #     number_of_points: 201
      #     tip_coordinates:  [200.0, 66.66,    0.0]
      #     tail_coordinates: [200.0, 66.66,  400.0]
      #   - name: probeData/probe_x200_y200
      #     number_of_points: 201
      #     tip_coordinates:  [200.0,  200.0,    0.0]
      #     tail_coordinates: [200.0,  200.0,  400.0]
      #   - name: probeData/probe_x200_y333
      #     number_of_points: 201
      #     tip_coordinates:  [200.0, 333.33,    0.0]
      #     tail_coordinates: [200.0, 333.33,  400.0]
      #   - name: probeData/probe_x333_y066
      #     number_of_points: 201
      #     tip_coordinates:  [333.33, 66.66,    0.0]
      #     tail_coordinates: [333.33, 66.66,  400.0]
      #   - name: probeData/probe_x333_y200
      #     number_of_points: 201
      #     tip_coordinates:  [333.33,  200.0,    0.0]
      #     tail_coordinates: [333.33,  200.0,  400.0]
      #   - name: probeData/probe_x333_y333
      #     number_of_points: 201
      #     tip_coordinates:  [333.33, 333.33,    0.0]
      #     tail_coordinates: [333.33, 333.33,  400.0]

      output_variables:
        - field_name: velocity
          field_size: 3
        - field_name: temperature
          field_size: 1


    # Compute spatial averages of velocity and temperature at all height levels
    # available on the ABL mesh. This is used for post-processing as well as
    # determining the ABL forcing necessary to drive the wind to a certain
    # speed/direction at different heights. See `abl_forcing` section below for
    # details of the driving wind forcing.
  boundary_layer_statistics:
    target_name: [fluid_part]
    stats_output_file: abl_statistics.nc
    compute_temperature_statistics: yes
    output_frequency: 10000
    time_hist_output_frequency: 1


  # -- This section not used  --    
  # abl_forcing deactivated as a source term above
  abl_forcing:
    output_format: abl_%s_sources.dat
    momentum:
      type: computed
      relaxation_factor: 1.0
      heights:
      - 200.00
      velocity_x:
      - - 0.0
        - 8.0
      - - 1000000000.0
        - 8.0
      velocity_y:
      - - 0.0
        - 0.0
      - - 1000000000.0
        - 0.0
      velocity_z:
      - - 0.0
        - 0.0
      - - 1000000000.0
        - 0.0
  restart:
    restart_data_base_name: ./restart_data/precursor.rst
    restart_frequency: 1000
    restart_start: 0

Time_Integrators:
- StandardTimeIntegrator:
    name: ti_1
    start_time: 0.0
    termination_step_count: 32400 # Change with sampling for data
    time_step: 0.5
    time_stepping_type: fixed
    time_step_count: 0
    second_order_accuracy: yes

    realms:
    - fluidRealm
